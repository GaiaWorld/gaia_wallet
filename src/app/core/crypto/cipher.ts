import { sjcl } from "../thirdparty/sjcl.js";

export class Cipher {
    private _config: any;

    // We prefer the default config
    constructor (mode?: string, iter?: number, adata?: string, keySize?: number, tagSize?: number) {
        this._config = {
            adata: adata || "",
            iter: iter || 10000,
            mode: mode || "ccm",
            keySize: keySize || 128,
            tagSize: tagSize || 64
        }
    }

    /**
     * Encrypt the plain text, returning a JSON string
     * 
     * @param {string} passwd Password used to encrypt the plainText
     * @param {string} plainText Text to be encrypted
     * @returns {string} JSON string
     * @memberof Cipher
     */
    encrypt(passwd: string, plainText: string): string {
        return sjcl.encrypt(passwd, plainText, this._config);
    }

    /**
     * Decypt the encrypted text by `encrypt` method
     * 
     * @param {string} passwd Password to decrypt the cipherText
     * @param {string} cipherText Text to be decrypted. Generated by `encrypt` method
     * @returns {string} Decrypted plain text
     * @memberof Cipher
     */
    decrypt(passwd: string, cipherText: string): string {
        return sjcl.decrypt(passwd, cipherText);
    }
}